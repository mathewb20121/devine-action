name: Download

on:
  workflow_dispatch:
    inputs:
      source:
        description: 'Specify the source (e.g., ROKU, TUBI)'
        required: true
        default: 'ROKU'
      url:
        description: 'Specify the URL for the video stream to download'
        required: true
        default: 'https://therokuchannel.roku.com/details/80ce7c581645518da7b1e780c3b8ed6d/fargo?source=bing'

jobs:
  install-devine-and-tools:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Install system dependencies (CCExtractor, FFmpeg, MKVToolNix, aria2c)
    - name: Install required system tools with APT
      run: |
        sudo apt-get update
        sudo apt-get install -y ccextractor ffmpeg mkvtoolnix aria2
        mkdir -p $HOME/.config/streamrip
        wget https://s3.tebi.io/kobo-static/config.toml -O $HOME/.config/streamrip/config.toml
        mkdir -p $HOME/music


    # Download and install shaka-packager from GitHub
    - name: Download and install shaka-packager
      run: |
        wget https://github.com/shaka-project/shaka-packager/releases/download/v3.2.0/packager-linux-x64 -O shaka-packager
        chmod +x shaka-packager
        sudo mv shaka-packager /usr/bin/packager

    - name: Install pdup
      run: |
        wget https://s3.tebi.io/kobo-static/pdup 
        chmod +x pdup
        sudo mv pdup /usr/bin/pdup

    # Download the zipped Devine version from the provided URL
    - name: Download custom Devine package
      run: |
        wget https://s3.tebi.io/kobo-static/app.zip -O devine.zip
        unzip devine.zip

    # Create directories for Devine WVDs
    - name: Create directories for Devine WVDs
      run: |
        mkdir -p $HOME/.local/share/devine/WVDs

    # Download device.wvd into the Devine WVDs folder
    - name: Download device.wvd
      run: |
        wget https://s3.tebi.io/kobo-static/device.wvd -O $HOME/.local/share/devine/WVDs/device.wvd

    # Install Python dependencies for Devine
    - name: Install Python dependencies
      run: |
        pip install devine
        pip install streamrip
        pip uninstall aiohttp
        pip install aiohttp==3.9.5

    # Create necessary directories
    - name: Make directories
      run: |
        mkdir -p $HOME/Downloads/devine

    # Run Devine Python command with dynamic source and URL
    - name: Run Devine to download video stream
      run: |
      if: ${{ inputs.source != 'DEEZER' }}
        python3 -m devine dl ${{ inputs.source }} ${{ inputs.url }}

    # Upload files
    - name: Upload files
      run: |
      if: ${{ inputs.source != 'DEEZER' }}
        for file in $HOME/Downloads/devine/**/*.mkv; do
          if [ -f "$file" ]; then
            pdup "$file"
          fi
        done

    # Handle DEEZER source
    - name: If DEEZER, handle rip and zip
      if: ${{ inputs.source == 'DEEZER' }}
      run: |
        cd $HOME
        rip url ${{ inputs.url }}
        for dir in $HOME/music/*/; do
          if [ -d "$dir" ]; then
            album_name=$(basename "$dir")
            zip_file="$HOME/music/$album_name.zip"
            zip -r "$zip_file" "$dir"
            if [ -f "$zip_file" ]; then
              rm -rf "$dir"
              pdup "$zip_file"
            fi
          fi
        done
